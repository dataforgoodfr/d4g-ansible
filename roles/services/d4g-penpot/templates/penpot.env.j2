## Penpot SECRET KEY. It serves as a master key from which other keys for subsystems
## (eg http sessions, or invitations) are derived.
##
## If you leave it commented, all created sessions and invitations will
## become invalid on container restart.
##
## If you going to uncomment this, we recommend to use a trully randomly generated
## 512 bits base64 encoded string here.  You can generate one with:
##
## python3 -c "import secrets; print(secrets.token_urlsafe(64))"

PENPOT_SECRET_KEY={{ lookup('env', 'PENPOT_TRULY_SECRET_KEY') }}

# PENPOT_PREPL_HOST: 0.0.0.0

## Database connection parameters. Don't touch them unless you are using custom
## postgresql connection parameters.

PENPOT_DATABASE_URI=postgresql://{{ lookup('env', 'POLETECH_DB_HOST') }}:18871/penpot
PENPOT_DATABASE_USERNAME=penpot
PENPOT_DATABASE_PASSWORD={{ lookup('env', 'PENPOT_DATABASE_PASSWORD') }}

## Redis is used for the websockets notifications. Don't touch unless the redis
## container has different parameters or different name.

PENPOT_REDIS_URI=redis://d4g-penpot_redis/0
PENPOT_BACKEND_URI=http://d4g-penpot_backend:6060
PENPOT_EXPORTER_URI=http://d4g-penpot_exporter:6061

## Default configuration for assets storage: using filesystem based with all files
## stored in a docker volume.

#PENPOT_ASSETS_STORAGE_BACKEND: assets-fs
#PENPOT_STORAGE_ASSETS_FS_DIRECTORY: /opt/data/assets

## Also can be configured to to use a S3 compatible storage
## service like MiniIO. Look below for minio service setup.

AWS_ACCESS_KEY_ID={{ lookup('env', 'PENPOT_S3_ACCESS_KEY') }}
AWS_SECRET_ACCESS_KEY={{ lookup('env', 'STRAPI_S3_SECRET_KEY') }}
PENPOT_ASSETS_STORAGE_BACKEND=assets-s3
PENPOT_STORAGE_ASSETS_S3_ENDPOINT=https://s3.fr-par.scw.cloud
PENPOT_STORAGE_ASSETS_S3_BUCKET=penpot-uploads


## Telemetry. When enabled, a periodical process will send anonymous data about this
## instance. Telemetry data will enable us to learn how the application is used,
## based on real scenarios. If you want to help us, please leave it enabled. You can
## audit what data we send with the code available on github.

PENPOT_TELEMETRY_ENABLED=false

## Example SMTP/Email configuration. By default, emails are sent to the mailcatch
## service, but for production usage it is recommended to setup a real SMTP
## provider. Emails are used to confirm user registrations & invitations. Look below
## how the mailcatch service is configured.

PENPOT_SMTP_DEFAULT_FROM=orga@dataforgood.fr
PENPOT_SMTP_DEFAULT_REPLY_TO=orga@dataforgood.fr
PENPOT_SMTP_HOST={{ lookup('env', 'SMTP_HOST') }}
PENPOT_SMTP_PORT={{ lookup('env', 'SMTP_PORT_NUMBER') }}
PENPOT_SMTP_USERNAME={{ lookup('env', 'SMTP_USER') }}
PENPOT_SMTP_PASSWORD={{ lookup('env', 'SMTP_PASSWORD') }}
PENPOT_SMTP_TLS=false
PENPOT_SMTP_SSL=false

## Common flags:
# demo-users
# email-verification
# log-emails
# log-invitation-tokens
# login-with-github
# login-with-gitlab
# login-with-google
# login-with-ldap
# login-with-oidc
# login-with-password
# prepl-server
# registration
# secure-session-cookies
# smtp
# smtp-debug
# telemetry
# webhooks
##
## You can read more about all available flags and other
## environment variables here:
## https://help.penpot.app/technical-guide/configuration/#advanced-configuration
#
# WARNING: if you're exposing Penpot to the internet, you should remove the flags
# 'disable-secure-session-cookies' and 'disable-email-verification'
PENPOT_FLAGS="enable-login enable-log-invitation-tokens enable-log-emails enable-smtp enable-prepl-server"


PENPOT_PUBLIC_URI=https://penpot.services.dataforgood.fr

# Max body size (30MiB); Used for plain requests, should never be
# greater than multi-part size
PENPOT_HTTP_SERVER_MAX_BODY_SIZE=31457280

# Max multipart body size (350MiB)
PENPOT_HTTP_SERVER_MAX_MULTIPART_BODY_SIZE=367001600
