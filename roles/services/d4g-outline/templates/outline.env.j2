# ------ REQUIRED -------

NODE_ENV=production

# Generate a hex-encoded 32-byte random key. You should use `openssl rand -hex 32`
# in your terminal to generate a random value.
SECRET_KEY={{ outline_secret_key }}

# Generate a unique random key. The format is not important but you could still use
# `openssl rand -hex 32` in your terminal to produce this.
UTILS_SECRET={{ outline_utils_secret_key }}

# For production point these at your databases, in development the default
# should work out of the box.
DATABASE_URL=postgres://{{ outline_db_user }}:{{ outline_db_password }}@{{ outline_db_host }}:{{ outline_db_port }}/outline
PGSSLMODE=disable

# For redis you can either specify an ioredis compatible url like this
REDIS_URL=redis://d4g-outline-redis:6379

# URL should point to the fully qualified, publicly accessible URL. If using a
# proxy the port in URL and PORT may be different.
URL=https://outline.services.dataforgood.fr
PORT=80

# Specify what storage system to use. Possible value is one of "s3" or "local".
# For "local", the avatar images and document attachments will be saved on local disk.
FILE_STORAGE=s3

# Maximum allowed size for the uploaded attachment.
FILE_STORAGE_UPLOAD_MAX_SIZE=26214400

# To support uploading of images for avatars and document attachments in a distributed
# architecture an s3-compatible storage can be configured if FILE_STORAGE=s3 above.
AWS_ACCESS_KEY_ID={{ outline_s3_access_key }}
AWS_SECRET_ACCESS_KEY={{ outline_s3_secret_key }}
AWS_REGION=fr-par
AWS_S3_UPLOAD_BUCKET_URL=https://s3.fr-par.scw.cloud/outline-uploads
AWS_S3_UPLOAD_BUCKET_NAME=outline-uploads
AWS_S3_FORCE_PATH_STYLE=false
AWS_S3_ACL=public-read

# ------- AUTHENTICATION -------
# To configure Slack auth, you'll need to create an Application at
# => https://api.slack.com/apps
#
# When configuring the Client ID, add a redirect URL under "OAuth & Permissions":
# https://<URL>/auth/slack.callback
SLACK_CLIENT_ID={{ outline_slack_client_id }}
SLACK_CLIENT_SECRET={{ outline_slack_client_secret }}

# Have the installation check for updates by sending anonymized statistics to
# the maintainers
ENABLE_UPDATES=true

# How many processes should be spawned. As a reasonable rule divide your servers
# available memory by 512 for a rough estimate
WEB_CONCURRENCY=2

# Configure lowest severity level for server logs. Should be one of
# error, warn, info, http, verbose, debug and silly
LOG_LEVEL=warn

# To support sending outgoing transactional emails such as "document updated" or
# "you've been invited" you'll need to provide authentication for an SMTP server
SMTP_HOST={{ outline_smtp_host }}
SMTP_PORT={{ outline_smtp_port }}
SMTP_USERNAME={{ outline_smtp_user }}
SMTP_PASSWORD={{ outline_smtp_password }}
SMTP_FROM_EMAIL="{{ outline_smtp_sender }}"
SMTP_REPLY_EMAIL="{{ outline_smtp_sender }}"
SMTP_TLS_CIPHERS=TLSv1.2
SMTP_SECURE=false

# The default interface language. See translate.getoutline.com for a list of
# available language codes and their rough percentage translated.
DEFAULT_LANGUAGE=en_US

# Optionally enable rate limiter at application web server
RATE_LIMITER_ENABLED=true

# Configure default throttling parameters for rate limiter
RATE_LIMITER_REQUESTS=1000
RATE_LIMITER_DURATION_WINDOW=60

